import { JsonRpc, Api } from 'eosjs'
import { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'
import { TextEncoder, TextDecoder } from 'util'
import * as dotenv from 'dotenv'
dotenv.config()

const private_key = process.env.PRIVATE_KEY
const rpc = new JsonRpc('http://$NODE_URL:8888')
const signatureProvider = new JsSignatureProvider([private_key])
const api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() })

async function main(id, user, data) {
    try {
        const createAction = {
            account: "$INERY_ACCOUNT",
            name: "create",
            authorization: [{
                actor: process.env.INERY_ACCOUNT,
                permission: "active"
            }],
            data: {
                id: id,
                user: user,
                data: data
            }
        }

        const createTx = await api.transact({
            actions: [createAction]
        }, {
            blocksBehind: 3,
            expireSeconds
        }, {
            blocksBehind: 3,
            expireSeconds: 30
        })
        console.log("CREATE Transaction ID: ", createTx.transaction_id)
        console.log("Response from contract:", createTx.processed.action_traces[0].console)

        await new Promise(resolve => setTimeout(resolve, 2000));

        const destroyAction = {
            account: "$INERY_ACCOUNT",
            name: "destroy",
            authorization: [{
                actor: process.env.INERY_ACCOUNT,
                permission: "active"
            }],
            data: {
                id: id
            }
        }

        const destroyTx = await api.transact({
            actions: [destroyAction]
        }, {
            blocksBehind: 3,
            expireSeconds: 30
        })
        console.log("DESTROY Transaction ID: ", destroyTx.transaction_id)
        console.log("Response from contract:", destroyTx.processed.action_traces[0].console)
    } catch (e) {
        console.log('Caught exception: ' + e);
        if (e instanceof RpcError)
            console.log(JSON.stringify(e.json, null, 2));
    }
}

main(1, process.env.INERY_ACCOUNT, "CRUD Transaction via JSON RPC")